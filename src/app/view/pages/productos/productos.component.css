.productos {
  padding-top: 90px;
  color: #fff;
  min-height: 100vh;
}

.list-product {
  margin-bottom: 50px;
}

.imgProductos {
  width: 280px; 
  border-radius: 15px;
  height: auto; 
  object-fit: cover; 
}

.tituloProducto{
  font-size: 25px;
  font-weight: 600;
  margin-top: 15px;
}

/* From uiverse.io by @satyamchaudharydev */
/* removing default style of button */

.form button {
  border: none;
  background: none;
  color: #8b8ba7;
}
/* styling of whole input container */
.form {
  --timing: 0.3s;
  --width-of-input: 200px;
  --height-of-input: 40px;
  --border-height: 2px;
  --input-bg: #fff;
  --border-color: #2f2ee9;
  --border-radius: 30px;
  --after-border-radius: 1px;
  position: relative;
  width: var(--width-of-input);
  height: var(--height-of-input);
  margin-bottom: 50px;
  display: flex;
  align-items: center;
  padding-inline: 0.8em;
  border-radius: var(--border-radius);
  transition: border-radius 0.5s ease;
  background: var(--input-bg,#fff);
}
/* styling of Input */
.input {
  font-size: 0.9rem;
  background-color: transparent;
  width: 100%;
  height: 100%;
  padding-inline: 0.5em;
  padding-block: 0.7em;
  border: none;
}
/* styling of animated border */
.form:before {
  content: "";
  position: absolute;
  background: var(--border-color);
  transform: scaleX(0);
  transform-origin: center;
  width: 100%;
  height: var(--border-height);
  left: 0;
  bottom: 0;
  border-radius: 1px;
  transition: transform var(--timing) ease;
}
/* Hover on Input */
.form:focus-within {
  border-radius: var(--after-border-radius);
}

input:focus {
  outline: none;
}
/* here is code of animated border */
.form:focus-within:before {
  transform: scale(1);
}
/* styling of close button */
/* == you can click the close button to remove text == */
.reset {
  border: none;
  background: none;
  opacity: 0;
  visibility: hidden;
}
/* close button shown when typing */
input:not(:placeholder-shown) ~ .reset {
  opacity: 1;
  visibility: visible;
}
/* sizing svg icons */
.form svg {
  width: 17px;
  margin-top: 3px;
}


/* From uiverse.io by @satyamchaudharydev */
/* removing default style of button */

.form button {
  border: none;
  background: none;
  color: #8b8ba7;
}
/* styling of whole input container */
.form {
  --timing: 0.3s;
  --width-of-input: 80%;
  --height-of-input: 40px;
  --border-height: 2px;
  --input-bg: #fff;
  --border-color: #2f2ee9;
  --border-radius: 30px;
  --after-border-radius: 1px;
  position: relative;
  width: var(--width-of-input);
  height: var(--height-of-input);
  display: flex;
  align-items: center;
  padding-inline: 0.8em;
  border-radius: var(--border-radius);
  transition: border-radius 0.5s ease;
  background: var(--input-bg,#fff);
}
/* styling of Input */
.input {
  font-size: 0.9rem;
  background-color: transparent;
  width: 100%;
  height: 100%;
  padding-inline: 0.5em;
  padding-block: 0.7em;
  border: none;
}
/* styling of animated border */
.form:before {
  content: "";
  position: absolute;
  background: var(--border-color);
  transform: scaleX(0);
  transform-origin: center;
  width: 100%;
  height: var(--border-height);
  left: 0;
  bottom: 0;
  border-radius: 1px;
  transition: transform var(--timing) ease;
}
/* Hover on Input */
.form:focus-within {
  border-radius: var(--after-border-radius);
}

input:focus {
  outline: none;
}
/* here is code of animated border */
.form:focus-within:before {
  transform: scale(1);
}
/* styling of close button */
/* == you can click the close button to remove text == */
.reset {
  border: none;
  background: none;
  opacity: 0;
  visibility: hidden;
}
/* close button shown when typing */
input:not(:placeholder-shown) ~ .reset {
  opacity: 1;
  visibility: visible;
}
/* sizing svg icons */
.form svg {
  width: 17px;
  margin-top: 3px;
}
/* .wrapper {
  height: 30px;
  min-width: 100px;
  max-width: 150px;
  display: flex;
  align-items: center;
  justify-content: center;
  background: #fff;
  color: #000;
  border-radius: 12px;
  box-shadow: 0 5px 10px rgba(0, 0, 0 , 0.2);
  margin-right: 10px;
  margin-left: 10px;
}

.wrapper span {
  width: 100%;
  text-align: center;
  font-size: 25px;
  font-weight: 600;
  cursor: pointer;
}

.wrapper span.num{
  font-size: 20px;
  border-right: 2px solid rgba(0, 0, 0 , 0.2);
  border-left: 2px solid rgba(0, 0, 0 , 0.2);
  pointer-events: none;
} */



.list-product {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr)); /* Grid de columnas autoajustables */
  grid-gap: 30px; /* Margen entre las columnas */
}

.list-product .box {
  background-color: #15151538;
  border-radius: 20px;
  padding: 20px;
  transition: all 0.2s;
}

.list-product .box:hover{
  transform: scale(1.007);
  box-shadow: 0 0 15px 0 rgba(255, 255, 255, 0.505);

}

.list-product .box img {
  height: 180px;
  width: 250px;
}

.iconos a {

  width: 40px;
  height: 40px;
  border-radius: 10%;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-size: 30px;
  color: #eee;
  cursor: pointer;
  margin-right: 10px; 
  margin-left: 10px;
  transition: all .1s;

}
.iconos .btn-carrito :active {
  /* transform: scale(1.2); */
  color:#0aa850;
}



.iconos .corazon {
  color: red;
}





/* imput */


input[type="number"] {
  -webkit-appearance: textfield;
  -moz-appearance: textfield;
  appearance: textfield;
}

input[type=number]::-webkit-inner-spin-button,
input[type=number]::-webkit-outer-spin-button {
  -webkit-appearance: none;
}

.number-input {
  border: 2px solid #ddd;
  display: inline-flex;
  border-radius: 25px;
}

.number-input,
.number-input * {
  box-sizing: border-box;
  
}

.quantity:focus {
  outline: none; /* Quita el borde de enfoque */
}

.number-input button {
  outline:none;
  -webkit-appearance: none;
  background-color: transparent;
  border: none;
  align-items: center;
  justify-content: center;
  color: #fff;
  width: 2rem;
  height: 2rem;
  cursor: pointer;
  margin: 0;
  position: relative;
}

/* .number-input button:after {
  color: #fff;
  display: inline-block;
  position: absolute;
  font-family: "Font Awesome 5 Free"; 
  font-weight: 900;
  content: '';
  transform: translate(-50%, -50%) rotate(180deg);
}
.number-input button.plus:after {
  transform: translate(-50%, -50%) rotate(0deg);
} */

.number-input input[type=number] {
  font-family: sans-serif;
  max-width: 3rem;
  padding: .3rem;
  border: solid #ddd;
  border-width: 0 2px;
  font-size: 20px;
  height: 2rem;
  font-weight: bold;
  text-align: center;
}